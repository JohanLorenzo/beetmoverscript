version: 1
policy:
  pullRequests: public
tasks:
  $let:
    head_rev:
      $if: 'tasks_for == "github-pull-request"'
      then: ${event.pull_request.head.sha}
      else:
        $if: 'tasks_for == "github-push"'
        then: ${event.after}
        else: ${event.release.tag_name}

    repository:
      $if: 'tasks_for == "github-pull-request"'
      then: ${event.pull_request.head.repo.html_url}
      else: ${event.repository.html_url}

    owner: ${event.sender.login}@users.noreply.github.com

    branch_or_version:
      $if: 'tasks_for == "github-pull-request"'
      then: pull-request
      else:
        $if: 'tasks_for == "github-push"'
        then:
          $if: 'event.ref[:10] == "refs/tags/"'
          then: ${event.ref[10:]} # strip "refs/tags/"
          else: ${event.ref[11:]} # strip "refs/heads/"
        else: ${event.release.tag_name}

  in:
    # this can be removed after we completely switch to GCP, also need to remove it from push deps
    - taskId: {$eval: as_slugid("py36")}
      provisionerId: aws-provisioner-v1
      workerType: github-worker
      created: {$fromNow: ''}
      deadline: {$fromNow: '4 hours'}
      payload:
        maxRunTime: 3600
        image: python:3.6
        command:
          - sh
          - -lxce
          - >-
            git clone ${repository} /src &&
            cd /src &&
            git config advice.detachedHead false &&
            git checkout ${head_rev} &&
            pip install tox &&
            tox -e py36
      metadata:
        name: tox py36
        description: code linting & unit tests on py36
        owner: ${owner}
        source: ${repository}/raw/${head_rev}/.taskcluster.yml

    - taskId: {$eval: as_slugid("py37")}
      provisionerId: aws-provisioner-v1
      workerType: github-worker
      created: {$fromNow: ''}
      deadline: {$fromNow: '4 hours'}
      payload:
        maxRunTime: 3600
        image: python:3.7
        command:
          - sh
          - -lxce
          - >-
            git clone ${repository} /src &&
            cd /src &&
            git config advice.detachedHead false &&
            git checkout ${head_rev} &&
            pip install tox &&
            tox -e py37
      metadata:
        name: tox py37
        description: code linting & unit tests on py37
        owner: ${owner}
        source: ${repository}/raw/${head_rev}/.taskcluster.yml

    # Limit docker operations to pushes only
    - $if: 'branch_or_version != "pull-request"'
      then:
        taskId: {$eval: as_slugid("docker_build")}
        dependencies:
          - {$eval: as_slugid("py36")}
          - {$eval: as_slugid("py37")}
        provisionerId: aws-provisioner-v1
        workerType: releng-svc
        created: {$fromNow: ''}
        deadline: {$fromNow: '4 hours'}
        payload:
          capabilities:
            privileged: true
          maxRunTime: 3600
          image: mozilla/taskboot:latest
          command:
            - taskboot
            - --git-repository=${repository}
            - --git-revision=${head_rev}
            - build
            - --write=/image.tar
            - --tag=registry.hub.docker.com/mozilla/beetmoverscript:${branch_or_version}
            - Dockerfile
          artifacts:
            public/beetmoverscript/image.tar:
              expires: {$fromNow: '2 weeks'}
              path: /image.tar
              type: file
        scopes:
          - docker-worker:capability:privileged
        metadata:
          name: docker build (${branch_or_version})
          description: build latest docker image (${branch_or_version})
          owner: ${owner}
          source: ${repository}/raw/${head_rev}/.taskcluster.yml

    - $if: 'branch_or_version != "pull-request"'
      then:
        taskId: {$eval: as_slugid("docker_push")}
        dependencies:
          - {$eval: as_slugid("docker_build")}
        provisionerId: aws-provisioner-v1
        workerType: releng-svc
        created: {$fromNow: ''}
        deadline: {$fromNow: '4 hours'}
        payload:
          features:
            # Needed for access to secret
            taskclusterProxy: true
          maxRunTime: 3600
          image: mozilla/taskboot:latest
          command:
            - taskboot
            - --secret=project/releng/beetmoverscript/deploy
            - push-artifact
        scopes:
          - secrets:get:project/releng/beetmoverscript/deploy
        metadata:
          name: docker push (${branch_or_version})
          description: push docker image (${branch_or_version})
          owner: ${owner}
          source: ${repository}/raw/${head_rev}/.taskcluster.yml
